%Phase 1: Input Parameters
A = [4 1; 1 1; 1 0; 0 1];
B = [6; 5; 0; 0];
c = [2 1]; 

%Phase 2: Plotting the Graph
x1 = 0:0.1:max(B);
x21 = max(0, (B(1) - A(1,1) * x1) / A(1,2)); 
x22 = max(0, (B(2) - A(2,1) * x1) / A(2,2)); 
plot(x1, x21, 'r', x1, x22, 'b');
title("Graph");
xlabel("X-Axis");
ylabel("Y-Axis");
grid on;
%Phase 3: Find Corner Points with Axes
position_x1 = find(x1 == 0);
position_x21 = find(x21 == 0);
position_x22 = find(x22 == 0);

Line1 = [x21(:, [position_x1 position_x21])];
Line2 = [x22(:, [position_x1 position_x22])];

%Phase 4: Find Points of Intersection
pt = [0; 0]; 

for i = 1:size(A, 1)
    A1 = A(i, :);
    B1 = B(i, :);
    for j = i + 1:size(A, 1)
        A2 = A(j, :);
        B2 = B(j, :);
        A4 = [A1; A2];
        B4 = [B1; B2];
        X = inv(A4) * B4; 
        pt = [pt X]; 
    end
end

ptt = pt';
P = unique(ptt, "rows"); 
%Phase 5: Write All Corner Points
b1 = P(:,1);
b2 = P(:,2);
%Phase 6: Find the Feasible Region
cons1 = round((4*b1) + b2 - 6);
s1 = find(cons1 > 0);
P(s1, :) = [];

cons2 = round(b1 + b2 - 5);
s2 = find(cons2 > 0);
P(s2, :) = [];

cons3 = round(-b1);
s3 = find(cons3 > 0);
P(s3, :) = [];

cons4 = round(-b2);
s4 = find(cons4 > 0);
P(s4, :) = [];

%Phase 7: Compute Objective Function
for i = 1:size(P, 1)
    fn(i, :) = sum(P(i, :) .* c);
end
%Phase 8: Find the Optimal Solution
optimal = max(fn);


