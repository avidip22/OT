clc;
clear all;
format short;

% Phase-1: Define Objective Function and Constraints
A = [1 1 1 0; 2 1 0 1];
C = [3 4 0 0];
b = [450; 600];
n = size(A,2);
m = size(A,1);

% Phase-2: Generate Basic Feasible Solutions (BFS)
if (n > m)
    nCm = nchoosek(n, m);
    pair = nchoosek(1:n, m);
    sol = [];
    
    for i = 1:nCm
        y = zeros(n,1);
        A_subset = A(:, pair(i,:));
        if rank(A_subset) == m
            x = A_subset \ b;
            if all(x >= 0)
                y(pair(i,:)) = x;
                sol = [sol, y];
            end
        end
    end
    
    % Phase-3: Compute Objective Function Values
    Z = C * sol;
    [Zmax, Zindex] = max(Z);
    bfs = sol(:, Zindex);
    optimal_value = [bfs' Zmax];
    optimal_bfs = array2table(optimal_value);
    optimal_bfs.Properties.VariableNames(1:size(optimal_bfs,2)) = {'x_1','x_2','x_3','x_4','Z'};
else
    error('nCm does not exist');
end
