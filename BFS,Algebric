clc;
clear all;

% Phase-1: Define Objective Function and Constraints
C = [3 4 0 0];
A = [1 1 1 0; 2 1 0 1];
B = [450; 600];

% Phase-2: Generate Basic Feasible Solutions (BFS)
n = size(A,2);
m = size(A,1);
nCm = nchoosek(n,m);
pairs = nchoosek(1:n,m);
bfssol = [];

for i = 1:nCm
    y = zeros(n,1);
    A_subset = A(:,pairs(i,:));
    if rank(A_subset) == m
        x = A_subset \ B;
        if all(x >= 0)
            y(pairs(i,:)) = x;
            bfssol = [bfssol, y];
        end
    end
end

% Phase-3: Compute Objective Function Values
z = @(x) C * x;
D = z(bfssol);
[maxVal, index] = max(D);

% Phase-4: Display Optimal BFS
optimalBFS = bfssol(:,index);
disp('Optimal BFS:');
disp(optimalBFS);
disp(['Maximum Objective Function Value: ', num2str(maxVal)]); Zindex]=max(Z)
bfs=sol(:,Zindex)
optimal_value=[bfs' Zmax]
optimal_bfs=array2table(optimal_value)
optimal_bfs.Properties.VariableNames(1:size(optimal_bfs,2))={'x_1','x_2','x_3','x_4','Z'}
